Программа запускается со следующим набором параметров:
-c productName price quantity

Значения параметров:
где id - 8 символов.
productName - название товара, 30 символов.
price - цена, 8 символов.
quantity - количество, 4 символа.
-c - добавляет товар с заданными параметрами в конец файла, генерирует id самостоятельно, инкрементируя максимальный id, найденный в файле.

В файле данные хранятся в следующей последовательности (без разделяющих пробелов):
id productName price quantity

Требования:
1. Программа должна считать имя файла для операций CrUD с консоли.
2. В классе Solution не должны быть использованы статические переменные.
3. При запуске программы без параметров список товаров должен остаться неизменным.
4. При запуске программы с параметрами "-c productName price quantity" в конец файла должна добавится новая строка с товаром.
5. Товар должен иметь следующий id, после максимального, найденного в файле.
6. Форматирование новой строки товара должно четко совпадать с указанным в задании.
7. Созданные для файлов потоки должны быть закрыты.

public class Solution {
    public static void main(String[] args) throws Exception {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        if (args.length == 4 && args[0].equals("-c")) {
            String address = reader.readLine();
            BufferedWriter writer = new BufferedWriter(new FileWriter(address, true));
            FileInputStream file = new FileInputStream(address);
            if (file.available() > 0) {
                writer.write(System.lineSeparator());
            }
            writer.write(String.format("%-8d%-30.30s%-8.2f%-4d",
                    findNumberNewProduct(address) + 1, args[1], Float.parseFloat(args[2]), Integer.parseInt(args[3])));
            writer.close();
        }
        reader.close();
    }

    public static int findNumberNewProduct(String address) throws IOException {     //looking for a max ID in all lines (in file)
        String line = "";
        int number = 0;
        try (BufferedReader bufferedReader = new BufferedReader(new FileReader(address))) {
            while ((line = bufferedReader.readLine()) != null) {
                number = Math.max(number, Integer.parseInt(line.substring(0, 8).trim()));
            }
            bufferedReader.close();
            return number;
        }
    }
}
